##
# Purpose -
#   this file serves as a syntax example for Kubic. In particular, this file imports other modules, loads and reads
#   data from local files, creates a class that holds said information, and prints it to stdout, while writing log
#   debugging messages to stderr
##

import School from 'modules/school'

import SchoolDistrict from 'api/schoolDistrict'

private class Student {
  define
    private id :: number,
    private name :: string,
    private gender :: number,
    private school :: School

  constructor( id :: number, name :: string, gender :: number, school :: School ) {
    this.id = id
    this.name = name
    this.gender = gender
    this.school = school
  }

  private function formatGender() :: string {
    return ['M', 'F', 'Tm', 'Tf', 'NB', 'X'].at( this.gender ) 
  }

  function print() :: string {
    define
      gender :: string = formatGender(),
      school :: string = this.school.getName()

    return stringFormat( '%this.id | %this.name | %gender | %school' )
  }
}

function main( args :: Map<string, string> ) {
  if ( args.contains( 'district' ) {
    define
      district :: SchoolDistrict = fetchSchoolDistrict( args.get( 'district' ) ),
      students :: Student[] = district.generateStudents( Student::constructor )

    print( 'ID | NAME | GENDER | SCHOOL' )

    for ( student : students ) {
      print( student.print() )
    }
  } else {
    print( 'No school was specified.' )
  }
}

