#
# TODO -- find a way to generate import address
#
import Metadata from
import Player as FormerPlayer from
import Player from

#
# Point -
#  contains a paired x, y coordinate location
#
class Point {
  define
    x :: number,
    y :: number

  constructor( x :: number, y :: number ) {
    this.setPoint( x, y )
  }

  function getX() :: number {
    return this.x
  }

  funciton getY() :: number {
    return this.y
  }

  function setPoint( x :: number, y :: number ) :: void {
    this.x = x
    this.y = y
  }
}

#
# Box -
#   Object that draws a box through four (4) points
#
class Box {
  define
    pointA :: Point,
    pointB :: Point,
    pointC :: Point,
    pointD :: Point

  constructor( a :: Point, b :: Point, c :: Point, d :: Point ) {
    this.pointA = a
    this.printB = b
    this.pointC = c
    this.pointD = d
  }
}

function sum( x :: number, y :: number ) :: number {
  return x + y
}

function multiply( x :: number, y :: number ) :: number {
  return x * y
}

function logResults( message :: string, a :: number, b :: number, c :: number ) :: void {
  define
    sum :: number = sum( a, b ),
    product :: number = multiply( b, c )

  log( message, sum, product )
}

define
  a :: number = 10,
  b :: number = 20,
  c :: number = 30,
  message :: string = "The results for this program are %1 and %2."

logResults( message, a, b, c )

if ( a > b ) {
  log( "a is greater than b" )
} elif ( b > a ) {
  log( "b is greater than a" )
} else {
  log( "They are both the same" )
}

